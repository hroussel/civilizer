<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">

<script>
$(document).ready(function() {
	$window = $(window);
	$editorFrame = $("#editor-frame");
	
	$("#new-fragment-editor-trigger").click(function (e) {
		onClickFragmentEditorTrigger($editorFrame, $window, e);
    });
	
	$(".edit-fragment-editor-trigger").click(function (e) {
		onClickFragmentEditorTrigger($editorFrame, $window, e);
	})
    
    $editorFrame.resizable({
        alsoResize: "#markItUpFragment-content-editor, #fragment-content-editor"
    });
	
	$editorFrame.draggable({
    	handle:"#editor-title-bar"
    	, cursor:"move"
    });
	
    extraMarkItUpSettings = {
        previewParser: parseMarkdown
    };
    
    $("#fragment-content-editor").markItUp(mySettings, extraMarkItUpSettings);
}); // end of $(document).ready()

function onClickFragmentEditorTrigger($editorFrame, $window, e) {
    var top = ($window.height() - $editorFrame.height()) / 2 + $window.scrollTop() + "px";
    
    $editorFrame.lightbox_me({
        centered:false
        , showOverlay:false
        , lightboxSpeed:"slow"
        , closeSelector:"#editor-frame-close-button"
        , closeEsc:false
        , modalCSS:{ position:"absolute", top:top }
        , onClose:onCloseFragmentEditor
    });
    
    e.preventDefault();
}

function onCloseFragmentEditor() {
    var previewFrame = $("#fragment-content-editor ~ .markItUpPreviewFrame");
    if (previewFrame) {
        previewFrame.remove();
    }
    
    var el = $("#fragment-editor-form\\:title-input");
    el.val(null);
    el.watermark("Title");
    
    el = $("#fragment-editor-form\\:tags-input");
    el.val(null);
    el.watermark("Tags");
    
    $("#fragment-content-editor").val(null);
    
    $("#fragment-editor-form\\:id-placeholder").val(null);
}

function parseMarkdown(inputText) {
    return markdown.toHTML(inputText);
}

function prepareFragmentContent() {
    var editor = $("#fragment-content-editor");
    var srcContent = editor.val();
    $("#fragment-editor-form\\:content-placeholder").val(srcContent);
}

function openFragmentEditorForEdit(fragmentId, tagNames) {
    var el = $("#fragment-group-form\\:fragment-title-placeholder-"+fragmentId);
    $("#fragment-editor-form\\:title-input").val(el.val());
    $("#fragment-editor-form\\:tags-input").val(tagNames);
    $("#fragment-editor-form\\:id-placeholder").val(fragmentId);
    el = $("#fragment-group-form\\:fragment-content-placeholder-"+fragmentId);
    $("#fragment-content-editor").val(el.val());
}

</script>

<div style='display:none' >
    <div id='editor-frame' >
        <h:form id="fragment-editor-form"  >
            <p:inputText id="title-input" value="#{userEditedFragmentBean.fragment.title}" autocomplete="false" />
            <p:inputText id="tags-input" value="#{userEditedFragmentBean.tagNames}" autocomplete="false" />
            <textarea id="fragment-content-editor" ></textarea>
            <h:inputHidden id="content-placeholder" value="#{userEditedFragmentBean.fragment.content}" />
            <h:inputHidden id="id-placeholder" value="#{userEditedFragmentBean.fragment.id}" />
            <p:commandButton onclick="prepareFragmentContent();" value="Preview" />
            <p:commandButton onclick="prepareFragmentContent();" value="Save" action="save-fragment" />
            <div id="editor-title-bar" >
                <a id="editor-frame-close-button" href="#" title="#{msg['label_fragment_close_editor']}">
                    <img src="resources/styles/custom/images/close.png" />
                </a>
            </div>
        </h:form>
    </div>
</div>

</ui:composition>