<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui">

<script>
//<![CDATA[
$(document).ready(function() {
	var $window = $(window);
	var $editorFrame = $("#editor-frame");
	
	$("#new-fragment-editor-trigger, .new-fragment-editor-trigger-on-toolbar").click(function (e) {
		onClickFragmentEditorTrigger($editorFrame, $window, e, "#{msg['label_new_fragment']}", true);
    });
	
	$(".edit-fragment-editor-trigger").click(function (e) {
		onClickFragmentEditorTrigger($editorFrame, $window, e, "#{msg['label_edit_fragment']}", false);
	})
    
    $editorFrame.resizable({
        alsoResize: "#markItUpFragment-content-editor, #fragment-content-editor"
    });
	
	$editorFrame.draggable({
    	handle:"#editor-title-bar"
    	, cursor:"move"
    });
	
    extraMarkItUpSettings = {
        previewParser: parseMarkdown
    };
    
    $("#fragment-content-editor").markItUp(mySettings, extraMarkItUpSettings);
    
    autocompleteForTypingTags();
}); // end of $(document).ready()

function onClickFragmentEditorTrigger($editorFrame, $window, e, title, forNewFragment) {
	var editorHeight = Math.max($editorFrame.height(), 360);
    var top = ($window.height() - editorHeight) / 2 + $window.scrollTop() + "px";
    
    if (forNewFragment) {
    	clearFragmentEditor();
    }
    
    $editorFrame.lightbox_me({
        centered:false
        , showOverlay:false
        , lightboxSpeed:"slow"
        , closeSelector:"#editor-frame-close-button"
        , closeEsc:false
        , modalCSS:{ position:"absolute", top:top, left:"30%" }
        , onClose:clearFragmentEditor
    });
    
    $("#editor-title").text(title);
    
    e.preventDefault();
}

function clearFragmentEditor() {
    var el = $("#fragment-editor-form\\:title-input");
    el.val(null);
    el.watermark("Title");
    
//     el = $("#fragment-editor-form\\:tags-input_input");
    el = $("#fragment-editor-form\\:tags-input");
    el.val(null);
    el.watermark("Tags");
    
    $("#fragment-content-editor").val(null);
    
    $("#fragment-editor-form\\:id-placeholder-for-fragment").val(null);
    
    $("#fragment-content-editor").next().remove();
}

function parseMarkdown(inputText) {
    return markdown.toHTML(inputText);
}

function openFragmentEditorForEdit(panelId, fragmentId, tagNames) {
    var el = $("#fragment-group-form\\:fragment-title-placeholder-panel"+panelId+"-"+fragmentId);
    $("#fragment-editor-form\\:title-input").val(el.val());
    
//     var tags = tagNames.split(",");
//     if (tags.length && tags[tags.length-1] == "") {
//     	tags.pop();
//     }
//     var tgt = $("#editor-tags");
//     tgt.empty();
//     for (var i=0; i<tags.length; ++i) {
//     	tgt.append('<span class="tag-box"><span class="fa fa-tag"><span style="color:black">'+tags[i]+'</span></span></span>');
//     }
    
//     $("#fragment-editor-form\\:tags-input_input").val(tagNames);
    $("#fragment-editor-form\\:tags-input").val(tagNames);
    $("#fragment-editor-form\\:id-placeholder-for-fragment").val(fragmentId);
    el = $("#fragment-group-form\\:fragment-content-placeholder-panel"+panelId+"-"+fragmentId);
    $("#fragment-content-editor").val(el.val());
}

function prepareFragmentContent() {
    var $editor = $("#fragment-content-editor");
    var srcContent = $editor.val();
    $("#fragment-editor-form\\:content-placeholder").val(srcContent);
    return srcContent;
}

function previewFragment() {
	var srcContent = prepareFragmentContent();
	var renderedHtml = $(parseMarkdown(srcContent));
	
	$("#fragment-overlay").lightbox_me({
        centered:false
        , showOverlay:false
        , lightboxSpeed:"fast"
        , closeSelector:"#fragment-overlay-close-button"
        , closeEsc:true
        , modalCSS:{ position:"fixed", bottom: '2%', right: '2%' }
    });
    
    $("#fragment-overlay-content").html(renderedHtml);
}

function autocompleteForTypingTags() {
	var tagSuggestions = [];
    $("#tag-palette-linear .each-tag").each(function (index, value) {
        tagSuggestions.push($(value).find(".each-tag-name").text());
    });
    
    var split = function (input) {
        return input.trim().split(/\,\s*/);
    }
    
    $("#fragment-editor-form\\:tags-input").autocomplete({
        source: function(req, res) {
             var tags = split(req.term);
             if (tags.length && tags[tags.length-1] == "") {
                  tags.pop();
             }
             var typed = tags[tags.length-1];
             tags.pop();
             var prefix = "";
             for (var i=0; i<tags.length; ++i) {
                 prefix += tags[i] + ",";
             }
             var output = [];
             for (var i=0; i<tagSuggestions.length; ++i) {
                 if (tagSuggestions[i].indexOf(typed) > -1) {
                     output.push(tagSuggestions[i]);
                 }
             }
             res(output);
        },
        focus: function () {
            // prevent value inserted on focus
            return false;
        },
        select: function (event, ui) {
            var terms = split(this.value);
            // remove the current input
            terms.pop();
            // add the selected item
            terms.push(ui.item.value);
            // add placeholder to get the comma-and-space at the end
            this.value = terms.join(",");
            return false;
        },
    });
}
//]]>
</script>

<div style='display:none' >
    <div id='editor-frame' >
        <h:form id="fragment-editor-form"  >
            <div id="editor-title-bar" >
                <span id="editor-title"></span>
                <div style="float: right;">
	                <a id="editor-frame-close-button" href="#" title="#{msg['label_close']}">
	                    <span class="fa fa-close fa-2x warning-color" ></span>
	                </a>
                </div>
            </div>
            <p:inputText id="title-input" value="#{paramFragmentBean.fragment.title}" autocomplete="false" onkeypress="if (event.keyCode == 13) { event.preventDefault(); }"/>
            <div id="editor-tags"></div>
<!--             <p:autoComplete id="tags-input" style="width:95%" value="#{paramFragmentBean.concatenatedTagNames}" completeMethod="#{tagListBean.suggest}" dropdown="true" autocomplete="false"/> -->
            <p:inputText id="tags-input" value="#{paramFragmentBean.concatenatedTagNames}" autocomplete="false" onkeypress="if (event.keyCode == 13) { event.preventDefault(); }"/>
            <textarea id="fragment-content-editor" ></textarea>
            <h:inputHidden id="content-placeholder" value="#{paramFragmentBean.fragment.content}" />
            <h:inputHidden id="id-placeholder-for-fragment" value="#{paramFragmentBean.fragment.id}" />
            <p:commandButton onclick="previewFragment();" value="#{msg['label_preview']}" style="margin-left:10px;" />
            <p:commandButton onclick="prepareFragmentContent();" value="#{msg['label_save']}" action="save-fragment" />
        </h:form>
    </div>
</div>

</ui:composition>